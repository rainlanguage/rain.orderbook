name: Build CLI Binary

on:
  push:

concurrency:
  group: build-cli-binary-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    env:
      COMMIT_SHA: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ssh-key: ${{ secrets.PUBLISH_PRIVATE_KEY }}

      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1G

      - run: ./prep-all.sh
        env:
          PUBLIC_WALLETCONNECT_PROJECT_ID: ${{ secrets.WALLETCONNECT_PROJECT_ID }}

      - name: Build CLI tarball
        run: nix develop -c rainix-ob-cli-artifact

      - name: Configure Git
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Commit and push updated tarball
        env:
          COMMIT_MESSAGE: "refresh orderbook cli"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add crates/cli/bin/rain-orderbook-cli.tar.gz
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "$COMMIT_MESSAGE"
          git push origin HEAD:${{ github.ref_name }}
