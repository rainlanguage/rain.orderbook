name: NPM Packages Release
on:
  push:
    branches:
      - main

jobs:
  release:
    if: ${{ github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'NPM Package Release') }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    env:
      DEPLOYMENT_KEY: ${{ github.ref == 'refs/heads/main' && secrets.PRIVATE_KEY || secrets.PRIVATE_KEY_DEV }}
      DEPLOY_METABOARD_ADDRESS: ${{ vars.CI_DEPLOY_SEPOLIA_METABOARD_ADDRESS }}
      CI_FORK_SEPOLIA_BLOCK_NUMBER: ${{ vars.CI_FORK_SEPOLIA_BLOCK_NUMBER }}
      CI_FORK_SEPOLIA_DEPLOYER_ADDRESS: ${{ vars.CI_FORK_SEPOLIA_DEPLOYER_ADDRESS }}
      CI_DEPLOY_SEPOLIA_RPC_URL: ${{ secrets.CI_DEPLOY_SEPOLIA_RPC_URL || vars.CI_DEPLOY_SEPOLIA_RPC_URL }}
      CI_SEPOLIA_METABOARD_URL: ${{ vars.CI_SEPOLIA_METABOARD_URL }}
      CI_DEPLOY_POLYGON_RPC_URL: ${{ secrets.CI_DEPLOY_POLYGON_RPC_URL }}
      RPC_URL_ETHEREUM_FORK: ${{ secrets.RPC_URL_ETHEREUM_FORK }}
      CI_DEPLOY_FLARE_RPC_URL: ${{ secrets.CI_DEPLOY_FLARE_RPC_URL }}
      COMMIT_SHA: ${{ github.sha }}
    outputs:
      version: ${{ env.NEW_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.PUBLISH_PRIVATE_KEY }}

      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@main

      - name: Install NodeJS v22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - run: nix develop -c rainix-sol-prelude
        working-directory: lib/rain.interpreter
      - run: nix develop -c rainix-rs-prelude
        working-directory: lib/rain.interpreter
      - run: nix develop -c rainix-sol-prelude
        working-directory: lib/rain.interpreter/lib/rain.metadata
      - run: nix develop -c rainix-rs-prelude
        working-directory: lib/rain.interpreter/lib/rain.metadata
      - run: nix develop -c rainix-sol-prelude
      - run: nix develop -c rainix-rs-prelude
      - run: nix develop -c raindex-prelude

      - name: Test JS/TS Binding 1/2
        run: nix develop -c rainix-wasm-test

      - name: Test JS/TS Binding 2/2
        run: nix develop -c test-js-bindings

      - name: Build UI Components
        run: nix develop -c npm run build -w @rainlanguage/ui-components
      - name: Test UI Components
        run: nix develop -c npm run test -w @rainlanguage/ui-components

      - name: Git Config
        run: |
          git config --global user.email "${{ secrets.CI_GIT_EMAIL }}"
          git config --global user.name "${{ secrets.CI_GIT_USER }}"

      # set npm version
      - name: Set Version
        run: |
          npm version prerelease --preid alpha --no-git-tag-version -w @rainlanguage/ui-components -w @rainlanguage/orderbook
          echo "NEW_VERSION=$(jq -r '.version' ./packages/orderbook/package.json)" >> $GITHUB_ENV

      - name: Update orderbook Dependency Version for ui-components
        run: npm install -w @rainlanguage/ui-components @rainlanguage/orderbook@${{ env.NEW_VERSION }} --save-exact

      # Commit changes and tag
      - name: Commit And Tag
        run: |
          git add "packages/orderbook/package.json"
          git add "packages/ui-components/package.json"
          git add "package-lock.json"
          git commit -m "NPM Package Release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      # Push the commit to remote
      - name: Push Changes To Remote
        run: |
          git push origin 
          git push -u origin ${{ env.NEW_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create orderbook npm package tarball
      - name: Create orderbook NPM Package Tarball
        run: echo "NPM_PACKAGE=$(npm pack --silent -w @rainlanguage/orderbook)" >> $GITHUB_ENV

      - name: Rename orderbook NPM Package Tarball
        run: mv ${{ env.NPM_PACKAGE }} orderbook_npm_package_${{ env.NEW_VERSION }}.tgz

      # publish orderbook pkg to npm
      - name: Publish orderbook pkg To NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public
          package: orderbook_npm_package_${{ env.NEW_VERSION }}.tgz

      # Create npm package tarball for ui-components
      - name: Create ui-components NPM Package Tarball
        run: echo "NPM_PACKAGE=$(npm pack --silent -w @rainlanguage/ui-components)" >> $GITHUB_ENV

      - name: Rename ui-components NPM Package Tarball
        run: mv ${{ env.NPM_PACKAGE }} ui_components_npm_package_${{ env.NEW_VERSION }}.tgz

      # publish ui-components to npm
      - name: Publish ui-components To NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public
          package: ui_components_npm_package_${{ env.NEW_VERSION }}.tgz

      # Create gitHub release with tarballs
      - name: Create GitHub Release with orderbook pkg
        id: gh_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: NPM Package Release ${{ env.NEW_VERSION }}
          files: |
            orderbook_npm_package_${{ env.NEW_VERSION }}.tgz
            ui_components_npm_package_${{ env.NEW_VERSION }}.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
