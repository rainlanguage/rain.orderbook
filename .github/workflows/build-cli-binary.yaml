name: Build CLI Binary

on:
  workflow_dispatch:

concurrency:
  group: build-cli-binary-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    env:
      COMMIT_SHA: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ssh-key: ${{ secrets.PUBLISH_PRIVATE_KEY }}

      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1G

      - run: ./prep-all.sh
        env:
          PUBLIC_WALLETCONNECT_PROJECT_ID: ${{ secrets.WALLETCONNECT_PROJECT_ID }}

      - name: Build CLI tarball
        run: nix develop -c rainix-ob-cli-artifact

      - name: Create GitHub release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: cli-${{ github.sha }}
          name: Rain Orderbook CLI ${{ github.sha }}
          body: |
            Rain Orderbook CLI binary built from commit ${{ github.sha }}.
          prerelease: true
          generateReleaseNotes: true
          artifacts: crates/cli/bin/rain-orderbook-cli.tar.gz
          artifactContentType: application/gzip
