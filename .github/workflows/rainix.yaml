name: Rainix CI
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.ref }}-rainix
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  standard-tests:
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        task: [ob-rs-test, rainix-rs-artifacts]
        is-not-main:
          - ${{ github.ref != 'refs/heads/main' }}
        include:
          # Solidity doesn't need to be tested on multiple platforms
          - os: ubuntu-latest
            task: rainix-sol-test
          - os: ubuntu-latest
            task: rainix-sol-static
          - os: ubuntu-latest
            task: rainix-sol-artifacts
          # We don't need to do rust static analysis on multiple platforms
          - os: ubuntu-latest
            task: rainix-rs-static
          # Wasm target doesnt need to run on multiple platforms
          - os: ubuntu-latest
            task: rainix-wasm-artifacts
          - os: ubuntu-latest
            task: rainix-wasm-test
          # Testing JS/TS bindings doesnt need to run on multiple platforms
          - os: ubuntu-latest
            task: test-js-bindings
          # Legal doesnt need to run on multiple platforms
          - os: ubuntu-latest
            task: rainix-sol-legal
        exclude:
          - is-not-main: true
            os: macos-latest
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      COMMIT_SHA: ${{ github.sha }}
      # This is the address of a metaboard on Sepolia. It's needed for the sol
      # artifact deploy dry run.
      DEPLOY_METABOARD_ADDRESS: "0x77991674ca8887D4ee1b583DB7324B41d5f894c4"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # https://github.com/actions/runner-images/issues/2840#issuecomment-2272410832
      - run: |
          sudo rm -rf \
            "$AGENT_TOOLSDIRECTORY" \
            /opt/google/chrome \
            /opt/microsoft/msedge \
            /opt/microsoft/powershell \
            /opt/pipx \
            /usr/lib/mono \
            /usr/local/julia* \
            /usr/local/lib/android \
            /usr/local/lib/node_modules \
            /usr/local/share/chromium \
            /usr/local/share/powershell \
            /usr/share/dotnet \
            /usr/share/swift
          df -h

      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until the Nix store size is at most this number
          # before trying to save a new cache
          gc-max-store-size-linux: 10G

      - run: ./pointers.sh

      - name: Generate ephemeral deployment key
        run: |
          # Generate wallet within nix develop environment
          WALLET_OUTPUT=$(nix develop -c cast wallet new)

          # Extract the private key
          KEY=$(echo "$WALLET_OUTPUT" | grep "Private key:" | awk '{print $3}')

          # Store in GitHub environment (overwrites the hardcoded test key)
          echo "DEPLOYMENT_KEY=$KEY" >> "$GITHUB_ENV"

          echo "Generated ephemeral deployment key for this run"

      - name: Run ${{ matrix.task }}
        env:
          ETH_RPC_URL: ${{ secrets.CI_DEPLOY_SEPOLIA_RPC_URL || vars.CI_DEPLOY_SEPOLIA_RPC_URL || 'https://sepolia.gateway.tenderly.co' }}

        run: nix develop -c ${{ matrix.task }}
